:Test-Layer: unit

Create some test classes so that we don't need to import real
locations and events::

   >>> class DummyLocation(object):
   ...     def __init__(self, name, priority):
   ...         self.name = name
   ...         self.priority = priority
   ...     def __str__(self):
   ...         return "@ %s" % self.name

   >>> class DummyEvent(object):
   ...     def __init__(self, start, end, location):
   ...         self.start = start
   ...         self.end = end
   ...         self.majorLocation = location
   ...         self.id = location.name + str(self.start)
   ...     def __repr__(self):
   ...         return "<%d-%d %s>" % (
   ...             self.start, self.end, self.majorLocation)

Create test objects where we have some meaningful locations and amount
of events::

   >>> cave = DummyLocation("cave", 1)
   >>> home = DummyLocation("home", 2)
   >>> events = [
   ...     DummyEvent(4, 5, cave),
   ...     DummyEvent(6, 7, home),
   ...     DummyEvent(1, 2, cave),
   ...     DummyEvent(6, 7, cave),
   ...     DummyEvent(1, 2, home),
   ...     ]

   >>> import asmmobile.orderby as orderby

Order by start time::

   >>> events.sort(orderby.startTime)
   >>> events
   [<1-2 @ cave>, <1-2 @ home>, <4-5 @ cave>, <6-7 @ home>, <6-7 @ cave>]

Order by location priority where home is more important than cave::

   >>> events.sort(orderby.locationPriority)
   >>> events
   [<1-2 @ home>, <6-7 @ home>, <1-2 @ cave>, <4-5 @ cave>, <6-7 @ cave>]
